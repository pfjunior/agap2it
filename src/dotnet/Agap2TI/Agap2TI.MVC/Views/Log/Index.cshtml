@using Agap2TI.MVC.Utils
@model PaginatedList<Agap2TI.MVC.Models.Log>

@{
    ViewData["Title"] = "Logs";
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="row mb-3">
        <label class="">Find by Log Type or Description:</label>
        <div class="col-4">
            <input type="text" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-secondary">Clear</a>
        </div>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Date
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LogTypeSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Type
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Description
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-light @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-light @nextDisabled">
    Next
</a>
